name: Build PHP Extensions

on: [ 'push' ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create Release
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  xlswriter:
    name: Build Xlswriter
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '8.1', '8.2', '8.3' ]
        alpine-version: [ '3.16', '3.17', '3.18', '3.19', '3.20', 'edge' ]
        exclude:
          - php-version: '8.3'
            alpine-version: '3.16'
          - php-version: '8.3'
            alpine-version: '3.17'
          - php-version: '8.3'
            alpine-version: '3.18'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
          - php-version: '8.1'
            alpine-version: '3.20'
          - php-version: '8.1'
            alpine-version: 'edge'
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      XLS_WRITER_VERSION: '1.5.8'
    steps:
      - uses: actions/checkout@v4
      - name: Build Xlswriter
        run: cd xlswriter && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/xlswriter') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: xlswriter/xlswriter-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: xlswriter-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream

  imagick:
    name: Build imagick
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '8.1', '8.2', '8.3' ]
        alpine-version: [ '3.16', '3.17', '3.18', '3.19', '3.20', 'edge' ]
        exclude:
          - php-version: '8.3'
            alpine-version: '3.16'
          - php-version: '8.3'
            alpine-version: '3.17'
          - php-version: '8.3'
            alpine-version: '3.18'
          - php-version: '8.3'
            alpine-version: '3.19'
          - php-version: '8.3'
            alpine-version: '3.20'
          - php-version: '8.3'
            alpine-version: 'edge'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
          - php-version: '8.1'
            alpine-version: '3.20'
          - php-version: '8.1'
            alpine-version: 'edge'
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      IMAGICK_VERSION: '3.7.0'
    steps:
      - uses: actions/checkout@v4
      - name: Build imagick
        run: cd imagick && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/imagick') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: imagick/imagick-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: imagick-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream
