on: [ 'push', 'pull_request' ]

name: Build PHP Extensions

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  xlswriter:
    name: Build Xlswriter
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '8.0', '8.1' ]
        alpine-version: [ '3.15', '3.16' ]
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      XLS_WRITER_VERSION: "1.5.4"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Xlswriter
        run: cd xlswriter && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/xlswriter') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: xlswriter/xlswriter-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: xlswriter-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream

  imagick:
    name: Build imagick
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '8.0', '8.1' ]
        alpine-version: [ '3.15', '3.16' ]
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      IMAGICK_VERSION: "3.7.0"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build imagick
        run: cd imagick && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/imagick') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: imagick/imagick-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: imagick-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream


